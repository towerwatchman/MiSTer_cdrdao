name: Build cdrdao for MiSTer FPGA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GCC_VERSION: 10.2-2020.11
      CDRDAO_VERSION: 1.2.5
      CDRDAO_RELEASE: rel_1_2_5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip \
            binfmt-support qemu-user-static autoconf bc bison curl flex gcc \
            libelf-dev libgmp3-dev libiberty-dev liblz4-tool libmpc-dev \
            libncurses-dev libncurses5-dev libpci-dev libssl-dev libudev-dev \
            lzop openssl qemu-user sharutils u-boot-tools

      - name: Setup QEMU for ARM
        run: |
          sudo cp /usr/bin/qemu-arm-static /usr/local/bin/
          sudo update-binfmts --install qemu-arm /usr/local/bin/qemu-arm-static \
            --magic "\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00" \
            --mask "\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff"

      - name: Install Linaro GCC 10.2
        run: |
          # Try primary URL
          wget -q --timeout=10 -c https://releases.linaro.org/components/toolchain/binaries/10.2-2020.11/arm-linux-gnueabihf/gcc-linaro-10.2.1-2020.11-x86_64_arm-linux-gnueabihf.tar.xz || \
          # Fallback to alternative URL
          wget -q -c https://archive.org/download/arm-toolchains/gcc-linaro-10.2.1-2020.11-x86_64_arm-linux-gnueabihf.tar.xz
          sudo mkdir -p /opt/gcc-10.2-arm
          sudo tar -xf gcc-linaro-10.2.1-2020.11-x86_64_arm-linux-gnueabihf.tar.xz -C /opt/gcc-10.2-arm --strip-components=1
          rm gcc-linaro-10.2.1-2020.11-x86_64_arm-linux-gnueabihf.tar.xz

      - name: Setup ARM Library Symlinks
        run: |
          sudo ln -sf /opt/gcc-10.2-arm/arm-none-linux-gnueabihf/libc/lib/ld-linux-armhf.so.3 /lib/ld-linux-armhf.so.3
          sudo ln -sf /opt/gcc-10.2-arm/arm-none-linux-gnueabihf/libc/lib/libc.so.6 /lib/libc.so.6
          sudo ln -sf /opt/gcc-10.2-arm/arm-none-linux-gnueabihf/libc/lib/libpthread.so.0 /lib/libpthread.so.0

      - name: Build cdrdao
        run: |
          export PATH=/opt/gcc-10.2-arm/bin:$PATH
          wget https://github.com/cdrdao/cdrdao/releases/download/${CDRDAO_RELEASE}/cdrdao-${CDRDAO_VERSION}.tar.bz2
          tar -xjf cdrdao-${CDRDAO_VERSION}.tar.bz2
          cd cdrdao-${CDRDAO_VERSION}
          ./configure --host=arm-none-linux-gnueabihf
          make -j$(nproc)
          if [ ! -f dao/cdrdao ] || [ ! -f utils/toc2cue ]; then
            echo "Error: Required binaries not found"
            ls -la dao/
            ls -la utils/
            exit 1
          fi

      - name: Verify build
        run: |
          cd cdrdao-${CDRDAO_VERSION}
          file dao/cdrdao
          file utils/toc2cue
          arm-none-linux-gnueabihf-objdump -d dao/cdrdao | head -n 20

      - name: Package Artifacts
        run: |
          mkdir -p artifacts
          cp cdrdao-${CDRDAO_VERSION}/dao/cdrdao artifacts/cdrdao
          cp cdrdao-${CDRDAO_VERSION}/utils/toc2cue artifacts/toc2cue
          tar -czf cdrdao-mister.tar.gz -C artifacts .

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cdrdao-mister
          path: cdrdao-mister.tar.gz
          if-no-files-found: error

      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          TAG="v${CDRDAO_VERSION}-mister-$(date +%Y%m%d)"
          echo "Creating release with tag: $TAG"
          gh release create "$TAG" \
            --title "cdrdao ${CDRDAO_VERSION} for MiSTer" \
            --notes "Built for MiSTer FPGA (ARM). Includes cdrdao and toc2cue binaries." \
            --draft=false \
            cdrdao-mister.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}